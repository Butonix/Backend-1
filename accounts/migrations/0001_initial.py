# Generated by Django 3.1.3 on 2020-11-28 14:16

import uuid

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('location', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_approved', models.BooleanField(default=False, editable=False)),
                ('approved_at', models.DateTimeField(blank=True, default=None, editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Approver', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='MemberCreator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='MemberModifier', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Members',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=1024, null=True)),
                ('contacts', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveBigIntegerField(unique=True), blank=True, null=True, size=3)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('current_city', models.CharField(blank=True, max_length=512, null=True)),
                ('home_town', models.CharField(blank=True, max_length=512, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='MemberCountry', to='location.country')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='MemberDistrict', to='location.district')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='MemberProvince', to='location.province')),
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResetPasswordCode',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Reset Password Codes',
            },
        ),
        migrations.CreateModel(
            name='ProfileImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='follower/profile', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'gif', 'bmp', 'tiff', 'JPG'])])),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FollowerProfileImage', to='accounts.profile')),
            ],
            options={
                'verbose_name': 'Follower Profile',
                'verbose_name_plural': 'Follower Profile Images',
            },
        ),
        migrations.CreateModel(
            name='MemberBranch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_ids', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveBigIntegerField(), size=5)),
                ('date_of_membership', models.DateField()),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.member')),
            ],
            options={
                'verbose_name': 'Member Branch',
                'verbose_name_plural': 'Member Branches',
            },
        ),
        migrations.CreateModel(
            name='MemberRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(choices=[('Branch Chief', 'Branch Chief'), ('Branch Vice Chief', 'Branch Vice Chief'), ('Leader', 'Leader'), ('Double Star Leader', 'Double Star Leader'), ('Single Star Leader', 'Single Star Leader'), ('MAINTAINER', 'MAINTAINER')], max_length=18)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('branch_id', models.PositiveBigIntegerField()),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.member')),
            ],
            options={
                'verbose_name': 'Member Role',
                'verbose_name_plural': 'Member Roles',
                'unique_together': {('member', 'role_name', 'branch_id')},
            },
        ),
    ]
